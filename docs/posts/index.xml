<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on QingHua&#39;s Blog</title>
    <link>https://qinhua99.github.io/posts/</link>
    <description>Recent content in Posts on QingHua&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 18 Dec 2023 23:52:20 +0800</lastBuildDate><atom:link href="https://qinhua99.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo-Papermod站点</title>
      <link>https://qinhua99.github.io/posts/hugo-papermod%E7%AB%99%E7%82%B9/</link>
      <pubDate>Mon, 18 Dec 2023 23:52:20 +0800</pubDate>
      
      <guid>https://qinhua99.github.io/posts/hugo-papermod%E7%AB%99%E7%82%B9/</guid>
      <description>Hugo下载与安装 到Github下载Hugo的二进制文件，解压到合适位置。 在电脑中添加环境变量。“环境变量”-“Path”-&amp;ldquo;编辑环境变量&amp;rdquo;-“新建”-“D:\Application\hugo”，确定即可 验证其是否安装成功，在终端中输入hugo serson，出现版本号即可 注：下载安装的方法并不唯一，比如通过包管理器（如 Homebrew 或 Chocolatey）安装的 Hugo也是可以的 创建GitHub-Blog仓库 在Github创建新的仓库，仓库名称为用户名.github.io，也可添加README file，创建后可克隆到本地。
Hugo_Blog创建 创建Hugo网站，并进入网站目录 hugo new site blog_name cd blog_name 站点目录结构如下： hugo.yaml(hugo.toml)：Hugo 的配置文件，其中包含你可以设置和自定义的站点配置选项。(原本为hugo.toml，可以改为hugo.yaml格式的，方便编辑) content/：该目录通常包含你的站点的内容，如文章、页面和资源文件。你可以根据自己的需要在此目录下创建子目录和文件。 data/：该目录用于存放数据文件，你可以在 Hugo 模板中使用这些数据文件来生成动态内容。 archetypes/：该目录包含用于创建新内容的模板文件。当你使用 hugo new 命令创建新的内容时，Hugo 将基于这些模板文件生成新的文件。 layouts/：该目录包含 Hugo 网站的布局模板文件，用于定义站点的整体结构和样式 static/：该目录用于存放静态文件，如图像、CSS 和 JavaScript 文件。这些文件会直接复制到生成的网站中，而无需经过 Hugo 的处理。 themes/：如果你使用了一个或多个主题，它们将被放置在此目录下。主题包含布局文件、样式和其他资源，可以覆盖站点的默认设置。 public/（默认输出目录）：Hugo 生成的最终网站文件将存放在此目录下。该目录包含完整的 HTML 文件和其他生成的资源。(本站将输出改为了docs/) 添加主题PaperMod git init git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 在hugo.yaml中添加theme: PaperMod即可 本地预览，运行Hugo服务器，访问http://localhost:1313进行预览 hugo server -D hugo server -D -F --cleanDestinationDir 以上两个命令选择其一即可，--cleanDestinationDir可以清除过去的重新生产网站 创建文章 hugo new posts/Hello_world.</description>
    </item>
    
    <item>
      <title>Hugo-Papermod</title>
      <link>https://qinhua99.github.io/posts/hugo-papermod/</link>
      <pubDate>Mon, 18 Dec 2023 22:52:20 +0800</pubDate>
      
      <guid>https://qinhua99.github.io/posts/hugo-papermod/</guid>
      <description>自定义字体和代码 字体选择的是LXGW WenKai/霞鹜文楷，参考其网页嵌入实现1,2，在layouts/partials/extend_head.html中插入HTML代码
&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;https://cdn.staticfile.org/lxgw-wenkai-screen-webfont/1.6.0/style.css&amp;#34; /&amp;gt; 在assets/css/extended/blank.css中插入CCS即可，Consolas是本博客采用的字体
/*字体*/ body { font-family: &amp;#34;LXGW WenKai Screen&amp;#34;, sans-serif !important; } code { font-family: &amp;#34;LXGW WenKai Screen&amp;#34;, sans-serif; } /*code*/ .post-content pre, code { font-family: &amp;#39;Consolas&amp;#39;, sans-serif; max-height: 40rem; } </description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://qinhua99.github.io/posts/test/</link>
      <pubDate>Thu, 14 Dec 2023 20:21:24 +0800</pubDate>
      
      <guid>https://qinhua99.github.io/posts/test/</guid>
      <description>hajak ajdhak 在网页下方的说明内，找到主题安装的方法
或者，直接去主题的github网址，里面的readme.md中有说明主题的下载和使用方式，两个方法都是一样的
于是，根据主题作者提供的命令
git clone https://github.com/apvarun/blist-hugo-theme.git themes/blist ##获得主题 下载完成后，将 package.json 文件从 themes/showcase 文件夹复制到你的 Hugo 网站根文件夹，然后运行 npm install
进入themes/blist/exampleSite文件夹中，复制exampleSite中的文件，替换掉Hugo网站根文件夹中的相同命名的文件
执行命令</description>
    </item>
    
    <item>
      <title>hello</title>
      <link>https://qinhua99.github.io/posts/hello/</link>
      <pubDate>Thu, 14 Dec 2023 17:11:24 +0800</pubDate>
      
      <guid>https://qinhua99.github.io/posts/hello/</guid>
      <description>summary : &amp;ldquo;立于好于&amp;rdquo;
你好！ &amp;ldquo;IMC(Inter-Module Communication)是Neptus系统中模块之间通信的一种协议或机制。&amp;rdquo;
IMC是一种轻量级的，消息封装式的通信协议。 IMC定义了一系列的消息类型(Message)，每个消息都包含消息头和消息体。消息头包含源、目标、时间戳等元信息，消息体为实际的数据。 通过IMC，可以实现相互模块之间的收发。 &amp;lt; !&amp;mdash;more &amp;mdash;&amp;gt; IMC支持点对点通信和发布-订阅两种模式。 IMC基于UDP通信，提供了比较高效和实时的消息传递。 Neptus系统中的控制器、控制面板、计划执行器等模块都通过IMC进行交互。新模块可以通过实现IMC来加入系统。 IMC为Neptus系统提供了一个可扩展和灵活的内部通信机制,大大减少了模块间的耦合,也方便新增模块。 &amp;lt;!-- neptus地址 --&amp;gt; &amp;lt;arg name=&amp;#34;neptus_addr&amp;#34; default=&amp;#34;172.22.179.105&amp;#34;/&amp;gt; &amp;lt;!-- ros端地址 --&amp;gt; &amp;lt;arg name=&amp;#34;bridge_addr&amp;#34; default=&amp;#34;172.22.49.214&amp;#34;/&amp;gt; &amp;lt;arg name=&amp;#34;bridge_port&amp;#34; default=&amp;#34;6002&amp;#34;/&amp;gt; </description>
    </item>
    
    <item>
      <title>Hello_Blog</title>
      <link>https://qinhua99.github.io/posts/hello_blog/</link>
      <pubDate>Thu, 14 Dec 2023 17:11:24 +0800</pubDate>
      
      <guid>https://qinhua99.github.io/posts/hello_blog/</guid>
      <description>立于好于</description>
    </item>
    
    <item>
      <title>IMC话题</title>
      <link>https://qinhua99.github.io/posts/imc%E8%AF%9D%E9%A2%98/</link>
      <pubDate>Thu, 14 Dec 2023 17:11:24 +0800</pubDate>
      
      <guid>https://qinhua99.github.io/posts/imc%E8%AF%9D%E9%A2%98/</guid>
      <description>summary : &amp;ldquo;立于好于&amp;rdquo;
你好！ &amp;ldquo;IMC(Inter-Module Communication)是Neptus系统中模块之间通信的一种协议或机制。&amp;rdquo;
IMC是一种轻量级的，消息封装式的通信协议。 IMC定义了一系列的消息类型(Message)，每个消息都包含消息头和消息体。消息头包含源、目标、时间戳等元信息，消息体为实际的数据。 通过IMC，可以实现相互模块之间的收发。 &amp;lt; !&amp;mdash;more &amp;mdash;&amp;gt; IMC支持点对点通信和发布-订阅两种模式。 IMC基于UDP通信，提供了比较高效和实时的消息传递。 Neptus系统中的控制器、控制面板、计划执行器等模块都通过IMC进行交互。新模块可以通过实现IMC来加入系统。 IMC为Neptus系统提供了一个可扩展和灵活的内部通信机制,大大减少了模块间的耦合,也方便新增模块。 &amp;lt;!-- neptus地址 --&amp;gt; &amp;lt;arg name=&amp;#34;neptus_addr&amp;#34; default=&amp;#34;172.22.179.105&amp;#34;/&amp;gt; &amp;lt;!-- ros端地址 --&amp;gt; &amp;lt;arg name=&amp;#34;bridge_addr&amp;#34; default=&amp;#34;172.22.49.214&amp;#34;/&amp;gt; &amp;lt;arg name=&amp;#34;bridge_port&amp;#34; default=&amp;#34;6002&amp;#34;/&amp;gt; </description>
    </item>
    
  </channel>
</rss>
